version: '3.8'

services:
  # Full-stack service (both backend and frontend)
  research-app:
    build: .
    container_name: research-app-fullstack
    ports:
      - "8000:8000"  # FastAPI backend
      - "8501:8501"  # Streamlit frontend
    environment:
      - START_MODE=both
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - GOOGLE_CSE_ID=${GOOGLE_CSE_ID}
      - TOGETHER_API_KEY=${TOGETHER_API_KEY}
      - LANGSMITH_API_KEY=${LANGSMITH_API_KEY}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - LANGCHAIN_TRACING_V2=${LANGCHAIN_TRACING_V2:-true}
      - LANGCHAIN_PROJECT=${LANGCHAIN_PROJECT:-context-aware-research-app}
      - DEFAULT_LLM_PROVIDER=${DEFAULT_LLM_PROVIDER:-gemini}
      - GEMINI_MODEL=${GEMINI_MODEL:-gemini-1.5-flash}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - DATABASE_URL=${DATABASE_URL}
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend-only service
  backend:
    build: .
    container_name: research-app-backend
    ports:
      - "8000:8000"
    environment:
      - START_MODE=backend
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - GOOGLE_CSE_ID=${GOOGLE_CSE_ID}
      - TOGETHER_API_KEY=${TOGETHER_API_KEY}
      - LANGSMITH_API_KEY=${LANGSMITH_API_KEY}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - LANGCHAIN_TRACING_V2=${LANGCHAIN_TRACING_V2:-true}
      - LANGCHAIN_PROJECT=${LANGCHAIN_PROJECT:-context-aware-research-app}
      - DEFAULT_LLM_PROVIDER=${DEFAULT_LLM_PROVIDER:-gemini}
      - GEMINI_MODEL=${GEMINI_MODEL:-gemini-1.5-flash}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - DATABASE_URL=${DATABASE_URL}
    env_file:
      - .env
    restart: unless-stopped
    profiles:
      - backend-only

  # Frontend-only service (connects to external backend)
  frontend:
    build: .
    container_name: research-app-frontend
    ports:
      - "8501:8501"
    environment:
      - START_MODE=frontend
      - API_URL=${API_URL:-http://localhost:8000}
    restart: unless-stopped
    profiles:
      - frontend-only
    depends_on:
      - backend

# Networks
networks:
  default:
    name: research-app-network

# Volumes for persistent data (if using local database)
volumes:
  app_data:
    driver: local
